#下面的配置会出现在url上，如下
# http://127.0.0.1:9999/server/oauth/authorize?client_id=web2&redirect_uri=http://127.0.0.1:8082/web2/login&response_type=code&state=6qbynQ

#配置它只要是认证服务器配置那使用的,即.withClient("web1")
security.oauth2.client.client-id=web2
#配置它只要是认证服务器配置那使用的,即.secret("secret1")
security.oauth2.client.client-secret=secret2
#配置认证服务器的ip地址,后面的oauth/authorize是 spring-security-oauth2 提供的
security.oauth2.client.user-authorization-uri=http://127.0.0.1:9999/server/oauth/authorize
#认证服务器返回授权码以后(返回令牌),即向认证服务器请求令牌url
security.oauth2.client.access-token-uri=http://127.0.0.1:9999/server/oauth/token
# 这个ip地址获取密钥,它在访问这个url地址时会自动把
# security.oauth2.client.client-id security.oauth2.client.client-id和security.oauth2.client.client-secret=secret1带上,
# 这样认证服务就知道是哪一个web应用在拿数据,拿到之后就进行签名了,认证服务器上配置的是[converter.setSigningKey("www.yinlz.com");]
security.oauth2.resource.jwt.key-uri=http://127.0.0.1:9999/server/oauth/token_key

#以上是sso的配置,因为要去认证服务器登录认证,所以本项目是不需要登录认证的用户名和密码
server.port=8082
#访问本项目它会自动跳转到认证服务器的进行登录认证
server.context-path=/web2